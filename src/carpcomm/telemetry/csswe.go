// Author: Timothy Stranex <tstranex@carpcomm.com>
// Copyright 2013 Timothy Stranex

// Generated from /Users/tstranex/Downloads/csswe/csswe_public_gs_dist/CSSWE_GS_Client/telemetry_types.xml using /Users/tstranex/carp/carp/src/carpcomm/telemetry/convert_rax_xml_schema.py on Sat Sep 15 15:31:45 2012.

package telemetry

import "fmt"
import "errors"
import "carpcomm/pb"

func DecodeFrame_csswe(frame []byte, timestamp int64) (
	data []pb.TelemetryDatum, err error) {

	if len(frame) < 224 {
		return nil, errors.New(fmt.Sprintf("Frame too short: %d, expected %d.", len(frame), 224))
	}

	{
		raw := uint8(frame[43]) << 0
		X := float64(raw)
		y := X*0.03921568
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:batt_v", timestamp, z))
	}
	{
		raw := uint8(frame[49]) << 0
		X := float64(raw)
		y := X*0.01960784
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:3p3v_bus_v", timestamp, z))
	}
	{
		raw := uint8(frame[47]) << 0
		X := float64(raw)
		y := X*0.01960784
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:5v_bus_v", timestamp, z))
	}
	{
		raw := uint8(frame[46]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:batt_charge_c", timestamp, z))
	}
	{
		raw := uint8(frame[45]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:batt_discharge_c", timestamp, z))
	}
	{
		raw := uint8(frame[50]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:3p3v_bus_c", timestamp, z))
	}
	{
		raw := uint8(frame[48]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:5v_bus_c", timestamp, z))
	}
	{
		raw := uint8(frame[52]) << 0
		X := float64(raw)
		y := X*0.08488235
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvx1_v", timestamp, z))
	}
	{
		raw := uint8(frame[54]) << 0
		X := float64(raw)
		y := X*0.08488235
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvx2_v", timestamp, z))
	}
	{
		raw := uint8(frame[56]) << 0
		X := float64(raw)
		y := X*0.08488235
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvy1_v", timestamp, z))
	}
	{
		raw := uint8(frame[58]) << 0
		X := float64(raw)
		y := X*0.08488235
		z := 1.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvy2_v", timestamp, z))
	}
	{
		raw := uint8(frame[53]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvx1_c", timestamp, z))
	}
	{
		raw := uint8(frame[55]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvx2_c", timestamp, z))
	}
	{
		raw := uint8(frame[57]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvy1_c", timestamp, z))
	}
	{
		raw := uint8(frame[59]) << 0
		X := float64(raw)
		y := X*7.84313
		z := 0.001000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:pvy2_c", timestamp, z))
	}
	{
		m := map[byte]float64{
			0: -61.000000,
			1: -51.000000,
			2: -41.000000,
			3: -35.000000,
			4: -31.000000,
			5: -27.000000,
			6: -23.000000,
			7: -21.000000,
			8: -19.000000,
			9: -16.000000,
			10: -14.000000,
			11: -13.000000,
			12: -11.000000,
			13: -10.000000,
			14: -8.000000,
			15: -7.000000,
			16: -5.000000,
			17: -4.000000,
			18: -3.000000,
			19: -2.000000,
			20: -1.000000,
			21: 0.000000,
			22: 1.000000,
			23: 2.000000,
			24: 3.000000,
			25: 4.000000,
			26: 5.000000,
			27: 6.000000,
			28: 7.000000,
			29: 7.000000,
			30: 8.000000,
			31: 9.000000,
			32: 9.000000,
			33: 10.000000,
			34: 11.000000,
			35: 11.000000,
			36: 12.000000,
			37: 13.000000,
			38: 14.000000,
			39: 14.000000,
			40: 15.000000,
			41: 16.000000,
			42: 16.000000,
			43: 17.000000,
			44: 17.000000,
			45: 18.000000,
			46: 18.000000,
			47: 19.000000,
			48: 19.000000,
			49: 20.000000,
			50: 20.000000,
			51: 21.000000,
			52: 22.000000,
			53: 22.000000,
			54: 23.000000,
			55: 23.000000,
			56: 24.000000,
			57: 24.000000,
			58: 25.000000,
			59: 25.000000,
			60: 26.000000,
			61: 27.000000,
			62: 27.000000,
			63: 28.000000,
			64: 29.000000,
			65: 29.000000,
			66: 30.000000,
			67: 30.000000,
			68: 31.000000,
			69: 31.000000,
			70: 32.000000,
			71: 32.000000,
			72: 33.000000,
			73: 33.000000,
			74: 34.000000,
			75: 34.000000,
			76: 35.000000,
			77: 35.000000,
			78: 35.000000,
			79: 36.000000,
			80: 36.000000,
			81: 37.000000,
			82: 37.000000,
			83: 37.000000,
			84: 38.000000,
			85: 38.000000,
			86: 38.000000,
			87: 39.000000,
			88: 39.000000,
			89: 39.000000,
			90: 39.000000,
			91: 40.000000,
			92: 40.000000,
			93: 41.000000,
			94: 41.000000,
			95: 42.000000,
			96: 42.000000,
			97: 43.000000,
			98: 43.000000,
			99: 43.000000,
			100: 44.000000,
			101: 44.000000,
			102: 45.000000,
			103: 45.000000,
			104: 46.000000,
			105: 46.000000,
			106: 46.000000,
			107: 47.000000,
			108: 47.000000,
			109: 48.000000,
			110: 48.000000,
			111: 48.000000,
			112: 49.000000,
			113: 49.000000,
			114: 49.000000,
			115: 50.000000,
			116: 50.000000,
			117: 51.000000,
			118: 51.000000,
			119: 52.000000,
			120: 52.000000,
			121: 53.000000,
			122: 53.000000,
			123: 53.000000,
			124: 54.000000,
			125: 54.000000,
			126: 55.000000,
			127: 55.000000,
			128: 56.000000,
			129: 56.000000,
			130: 56.000000,
			131: 57.000000,
			132: 57.000000,
			133: 58.000000,
			134: 58.000000,
			135: 58.000000,
			136: 59.000000,
			137: 59.000000,
			138: 60.000000,
			139: 60.000000,
			140: 60.000000,
			141: 61.000000,
			142: 61.000000,
			143: 62.000000,
			144: 62.000000,
			145: 63.000000,
			146: 63.000000,
			147: 64.000000,
			148: 64.000000,
			149: 65.000000,
			150: 65.000000,
			151: 66.000000,
			152: 66.000000,
			153: 67.000000,
			154: 67.000000,
			155: 68.000000,
			156: 68.000000,
			157: 68.000000,
			158: 69.000000,
			159: 69.000000,
			160: 70.000000,
			161: 70.000000,
			162: 71.000000,
			163: 71.000000,
			164: 72.000000,
			165: 72.000000,
			166: 73.000000,
			167: 73.000000,
			168: 74.000000,
			169: 75.000000,
			170: 75.000000,
			171: 76.000000,
			172: 76.000000,
			173: 77.000000,
			174: 77.000000,
			175: 78.000000,
			176: 78.000000,
			177: 79.000000,
			178: 79.000000,
			179: 80.000000,
			180: 80.000000,
			181: 81.000000,
			182: 82.000000,
			183: 82.000000,
			184: 83.000000,
			185: 84.000000,
			186: 84.000000,
			187: 85.000000,
			188: 86.000000,
			189: 86.000000,
			190: 87.000000,
			191: 87.000000,
			192: 88.000000,
			193: 89.000000,
			194: 89.000000,
			195: 90.000000,
			196: 91.000000,
			197: 91.000000,
			198: 92.000000,
			199: 93.000000,
			200: 94.000000,
			201: 95.000000,
			202: 95.000000,
			203: 96.000000,
			204: 97.000000,
			205: 98.000000,
			206: 99.000000,
			207: 99.000000,
			208: 100.000000,
			209: 101.000000,
			210: 102.000000,
			211: 103.000000,
			212: 104.000000,
			213: 105.000000,
			214: 106.000000,
			215: 107.000000,
			216: 108.000000,
			217: 109.000000,
			218: 110.000000,
			219: 111.000000,
			220: 113.000000,
			221: 114.000000,
			222: 115.000000,
			223: 117.000000,
			224: 118.000000,
			225: 119.000000,
			226: 120.000000,
			227: 122.000000,
			228: 124.000000,
			229: 125.000000,
			230: 127.000000,
			231: 129.000000,
			232: 131.000000,
			233: 133.000000,
			234: 135.000000,
			235: 137.000000,
			236: 139.000000,
			237: 141.000000,
			238: 144.000000,
			239: 147.000000,
			240: 150.000000,
			241: 153.000000,
			242: 156.000000,
			243: 160.000000,
			244: 165.000000,
			245: 170.000000,
			246: 175.000000,
			247: 180.000000,
			248: 188.000000,
			249: 196.000000,
			250: 206.000000,
			251: 218.000000,
			252: 236.000000,
			253: 261.000000,
			254: 284.000000,
			255: 307.000000,
		}
		y := m[frame[44]]
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:batt_t", timestamp, z))
	}
	{
		raw := uint8(frame[85]) << 0
		X := float64(raw)
		y := X
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:cdh_t", timestamp, z))
	}
	{
		raw := uint8(frame[82]) << 0
		X := float64(raw)
		y := X
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:radio_t", timestamp, z))
	}
	{
		m := map[byte]float64{
			0: -61.000000,
			1: -51.000000,
			2: -41.000000,
			3: -35.000000,
			4: -31.000000,
			5: -27.000000,
			6: -23.000000,
			7: -21.000000,
			8: -19.000000,
			9: -16.000000,
			10: -14.000000,
			11: -13.000000,
			12: -11.000000,
			13: -10.000000,
			14: -8.000000,
			15: -7.000000,
			16: -5.000000,
			17: -4.000000,
			18: -3.000000,
			19: -2.000000,
			20: -1.000000,
			21: 0.000000,
			22: 1.000000,
			23: 2.000000,
			24: 3.000000,
			25: 4.000000,
			26: 5.000000,
			27: 6.000000,
			28: 7.000000,
			29: 7.000000,
			30: 8.000000,
			31: 9.000000,
			32: 9.000000,
			33: 10.000000,
			34: 11.000000,
			35: 11.000000,
			36: 12.000000,
			37: 13.000000,
			38: 14.000000,
			39: 14.000000,
			40: 15.000000,
			41: 16.000000,
			42: 16.000000,
			43: 17.000000,
			44: 17.000000,
			45: 18.000000,
			46: 18.000000,
			47: 19.000000,
			48: 19.000000,
			49: 20.000000,
			50: 20.000000,
			51: 21.000000,
			52: 22.000000,
			53: 22.000000,
			54: 23.000000,
			55: 23.000000,
			56: 24.000000,
			57: 24.000000,
			58: 25.000000,
			59: 25.000000,
			60: 26.000000,
			61: 27.000000,
			62: 27.000000,
			63: 28.000000,
			64: 29.000000,
			65: 29.000000,
			66: 30.000000,
			67: 30.000000,
			68: 31.000000,
			69: 31.000000,
			70: 32.000000,
			71: 32.000000,
			72: 33.000000,
			73: 33.000000,
			74: 34.000000,
			75: 34.000000,
			76: 35.000000,
			77: 35.000000,
			78: 35.000000,
			79: 36.000000,
			80: 36.000000,
			81: 37.000000,
			82: 37.000000,
			83: 37.000000,
			84: 38.000000,
			85: 38.000000,
			86: 38.000000,
			87: 39.000000,
			88: 39.000000,
			89: 39.000000,
			90: 39.000000,
			91: 40.000000,
			92: 40.000000,
			93: 41.000000,
			94: 41.000000,
			95: 42.000000,
			96: 42.000000,
			97: 43.000000,
			98: 43.000000,
			99: 43.000000,
			100: 44.000000,
			101: 44.000000,
			102: 45.000000,
			103: 45.000000,
			104: 46.000000,
			105: 46.000000,
			106: 46.000000,
			107: 47.000000,
			108: 47.000000,
			109: 48.000000,
			110: 48.000000,
			111: 48.000000,
			112: 49.000000,
			113: 49.000000,
			114: 49.000000,
			115: 50.000000,
			116: 50.000000,
			117: 51.000000,
			118: 51.000000,
			119: 52.000000,
			120: 52.000000,
			121: 53.000000,
			122: 53.000000,
			123: 53.000000,
			124: 54.000000,
			125: 54.000000,
			126: 55.000000,
			127: 55.000000,
			128: 56.000000,
			129: 56.000000,
			130: 56.000000,
			131: 57.000000,
			132: 57.000000,
			133: 58.000000,
			134: 58.000000,
			135: 58.000000,
			136: 59.000000,
			137: 59.000000,
			138: 60.000000,
			139: 60.000000,
			140: 60.000000,
			141: 61.000000,
			142: 61.000000,
			143: 62.000000,
			144: 62.000000,
			145: 63.000000,
			146: 63.000000,
			147: 64.000000,
			148: 64.000000,
			149: 65.000000,
			150: 65.000000,
			151: 66.000000,
			152: 66.000000,
			153: 67.000000,
			154: 67.000000,
			155: 68.000000,
			156: 68.000000,
			157: 68.000000,
			158: 69.000000,
			159: 69.000000,
			160: 70.000000,
			161: 70.000000,
			162: 71.000000,
			163: 71.000000,
			164: 72.000000,
			165: 72.000000,
			166: 73.000000,
			167: 73.000000,
			168: 74.000000,
			169: 75.000000,
			170: 75.000000,
			171: 76.000000,
			172: 76.000000,
			173: 77.000000,
			174: 77.000000,
			175: 78.000000,
			176: 78.000000,
			177: 79.000000,
			178: 79.000000,
			179: 80.000000,
			180: 80.000000,
			181: 81.000000,
			182: 82.000000,
			183: 82.000000,
			184: 83.000000,
			185: 84.000000,
			186: 84.000000,
			187: 85.000000,
			188: 86.000000,
			189: 86.000000,
			190: 87.000000,
			191: 87.000000,
			192: 88.000000,
			193: 89.000000,
			194: 89.000000,
			195: 90.000000,
			196: 91.000000,
			197: 91.000000,
			198: 92.000000,
			199: 93.000000,
			200: 94.000000,
			201: 95.000000,
			202: 95.000000,
			203: 96.000000,
			204: 97.000000,
			205: 98.000000,
			206: 99.000000,
			207: 99.000000,
			208: 100.000000,
			209: 101.000000,
			210: 102.000000,
			211: 103.000000,
			212: 104.000000,
			213: 105.000000,
			214: 106.000000,
			215: 107.000000,
			216: 108.000000,
			217: 109.000000,
			218: 110.000000,
			219: 111.000000,
			220: 113.000000,
			221: 114.000000,
			222: 115.000000,
			223: 117.000000,
			224: 118.000000,
			225: 119.000000,
			226: 120.000000,
			227: 122.000000,
			228: 124.000000,
			229: 125.000000,
			230: 127.000000,
			231: 129.000000,
			232: 131.000000,
			233: 133.000000,
			234: 135.000000,
			235: 137.000000,
			236: 139.000000,
			237: 141.000000,
			238: 144.000000,
			239: 147.000000,
			240: 150.000000,
			241: 153.000000,
			242: 156.000000,
			243: 160.000000,
			244: 165.000000,
			245: 170.000000,
			246: 175.000000,
			247: 180.000000,
			248: 188.000000,
			249: 196.000000,
			250: 206.000000,
			251: 218.000000,
			252: 236.000000,
			253: 261.000000,
			254: 284.000000,
			255: 307.000000,
		}
		y := m[frame[61]]
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:pvx1_t", timestamp, z))
	}
	{
		m := map[byte]float64{
			0: -61.000000,
			1: -51.000000,
			2: -41.000000,
			3: -35.000000,
			4: -31.000000,
			5: -27.000000,
			6: -23.000000,
			7: -21.000000,
			8: -19.000000,
			9: -16.000000,
			10: -14.000000,
			11: -13.000000,
			12: -11.000000,
			13: -10.000000,
			14: -8.000000,
			15: -7.000000,
			16: -5.000000,
			17: -4.000000,
			18: -3.000000,
			19: -2.000000,
			20: -1.000000,
			21: 0.000000,
			22: 1.000000,
			23: 2.000000,
			24: 3.000000,
			25: 4.000000,
			26: 5.000000,
			27: 6.000000,
			28: 7.000000,
			29: 7.000000,
			30: 8.000000,
			31: 9.000000,
			32: 9.000000,
			33: 10.000000,
			34: 11.000000,
			35: 11.000000,
			36: 12.000000,
			37: 13.000000,
			38: 14.000000,
			39: 14.000000,
			40: 15.000000,
			41: 16.000000,
			42: 16.000000,
			43: 17.000000,
			44: 17.000000,
			45: 18.000000,
			46: 18.000000,
			47: 19.000000,
			48: 19.000000,
			49: 20.000000,
			50: 20.000000,
			51: 21.000000,
			52: 22.000000,
			53: 22.000000,
			54: 23.000000,
			55: 23.000000,
			56: 24.000000,
			57: 24.000000,
			58: 25.000000,
			59: 25.000000,
			60: 26.000000,
			61: 27.000000,
			62: 27.000000,
			63: 28.000000,
			64: 29.000000,
			65: 29.000000,
			66: 30.000000,
			67: 30.000000,
			68: 31.000000,
			69: 31.000000,
			70: 32.000000,
			71: 32.000000,
			72: 33.000000,
			73: 33.000000,
			74: 34.000000,
			75: 34.000000,
			76: 35.000000,
			77: 35.000000,
			78: 35.000000,
			79: 36.000000,
			80: 36.000000,
			81: 37.000000,
			82: 37.000000,
			83: 37.000000,
			84: 38.000000,
			85: 38.000000,
			86: 38.000000,
			87: 39.000000,
			88: 39.000000,
			89: 39.000000,
			90: 39.000000,
			91: 40.000000,
			92: 40.000000,
			93: 41.000000,
			94: 41.000000,
			95: 42.000000,
			96: 42.000000,
			97: 43.000000,
			98: 43.000000,
			99: 43.000000,
			100: 44.000000,
			101: 44.000000,
			102: 45.000000,
			103: 45.000000,
			104: 46.000000,
			105: 46.000000,
			106: 46.000000,
			107: 47.000000,
			108: 47.000000,
			109: 48.000000,
			110: 48.000000,
			111: 48.000000,
			112: 49.000000,
			113: 49.000000,
			114: 49.000000,
			115: 50.000000,
			116: 50.000000,
			117: 51.000000,
			118: 51.000000,
			119: 52.000000,
			120: 52.000000,
			121: 53.000000,
			122: 53.000000,
			123: 53.000000,
			124: 54.000000,
			125: 54.000000,
			126: 55.000000,
			127: 55.000000,
			128: 56.000000,
			129: 56.000000,
			130: 56.000000,
			131: 57.000000,
			132: 57.000000,
			133: 58.000000,
			134: 58.000000,
			135: 58.000000,
			136: 59.000000,
			137: 59.000000,
			138: 60.000000,
			139: 60.000000,
			140: 60.000000,
			141: 61.000000,
			142: 61.000000,
			143: 62.000000,
			144: 62.000000,
			145: 63.000000,
			146: 63.000000,
			147: 64.000000,
			148: 64.000000,
			149: 65.000000,
			150: 65.000000,
			151: 66.000000,
			152: 66.000000,
			153: 67.000000,
			154: 67.000000,
			155: 68.000000,
			156: 68.000000,
			157: 68.000000,
			158: 69.000000,
			159: 69.000000,
			160: 70.000000,
			161: 70.000000,
			162: 71.000000,
			163: 71.000000,
			164: 72.000000,
			165: 72.000000,
			166: 73.000000,
			167: 73.000000,
			168: 74.000000,
			169: 75.000000,
			170: 75.000000,
			171: 76.000000,
			172: 76.000000,
			173: 77.000000,
			174: 77.000000,
			175: 78.000000,
			176: 78.000000,
			177: 79.000000,
			178: 79.000000,
			179: 80.000000,
			180: 80.000000,
			181: 81.000000,
			182: 82.000000,
			183: 82.000000,
			184: 83.000000,
			185: 84.000000,
			186: 84.000000,
			187: 85.000000,
			188: 86.000000,
			189: 86.000000,
			190: 87.000000,
			191: 87.000000,
			192: 88.000000,
			193: 89.000000,
			194: 89.000000,
			195: 90.000000,
			196: 91.000000,
			197: 91.000000,
			198: 92.000000,
			199: 93.000000,
			200: 94.000000,
			201: 95.000000,
			202: 95.000000,
			203: 96.000000,
			204: 97.000000,
			205: 98.000000,
			206: 99.000000,
			207: 99.000000,
			208: 100.000000,
			209: 101.000000,
			210: 102.000000,
			211: 103.000000,
			212: 104.000000,
			213: 105.000000,
			214: 106.000000,
			215: 107.000000,
			216: 108.000000,
			217: 109.000000,
			218: 110.000000,
			219: 111.000000,
			220: 113.000000,
			221: 114.000000,
			222: 115.000000,
			223: 117.000000,
			224: 118.000000,
			225: 119.000000,
			226: 120.000000,
			227: 122.000000,
			228: 124.000000,
			229: 125.000000,
			230: 127.000000,
			231: 129.000000,
			232: 131.000000,
			233: 133.000000,
			234: 135.000000,
			235: 137.000000,
			236: 139.000000,
			237: 141.000000,
			238: 144.000000,
			239: 147.000000,
			240: 150.000000,
			241: 153.000000,
			242: 156.000000,
			243: 160.000000,
			244: 165.000000,
			245: 170.000000,
			246: 175.000000,
			247: 180.000000,
			248: 188.000000,
			249: 196.000000,
			250: 206.000000,
			251: 218.000000,
			252: 236.000000,
			253: 261.000000,
			254: 284.000000,
			255: 307.000000,
		}
		y := m[frame[62]]
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:pvx2_t", timestamp, z))
	}
	{
		m := map[byte]float64{
			0: -61.000000,
			1: -51.000000,
			2: -41.000000,
			3: -35.000000,
			4: -31.000000,
			5: -27.000000,
			6: -23.000000,
			7: -21.000000,
			8: -19.000000,
			9: -16.000000,
			10: -14.000000,
			11: -13.000000,
			12: -11.000000,
			13: -10.000000,
			14: -8.000000,
			15: -7.000000,
			16: -5.000000,
			17: -4.000000,
			18: -3.000000,
			19: -2.000000,
			20: -1.000000,
			21: 0.000000,
			22: 1.000000,
			23: 2.000000,
			24: 3.000000,
			25: 4.000000,
			26: 5.000000,
			27: 6.000000,
			28: 7.000000,
			29: 7.000000,
			30: 8.000000,
			31: 9.000000,
			32: 9.000000,
			33: 10.000000,
			34: 11.000000,
			35: 11.000000,
			36: 12.000000,
			37: 13.000000,
			38: 14.000000,
			39: 14.000000,
			40: 15.000000,
			41: 16.000000,
			42: 16.000000,
			43: 17.000000,
			44: 17.000000,
			45: 18.000000,
			46: 18.000000,
			47: 19.000000,
			48: 19.000000,
			49: 20.000000,
			50: 20.000000,
			51: 21.000000,
			52: 22.000000,
			53: 22.000000,
			54: 23.000000,
			55: 23.000000,
			56: 24.000000,
			57: 24.000000,
			58: 25.000000,
			59: 25.000000,
			60: 26.000000,
			61: 27.000000,
			62: 27.000000,
			63: 28.000000,
			64: 29.000000,
			65: 29.000000,
			66: 30.000000,
			67: 30.000000,
			68: 31.000000,
			69: 31.000000,
			70: 32.000000,
			71: 32.000000,
			72: 33.000000,
			73: 33.000000,
			74: 34.000000,
			75: 34.000000,
			76: 35.000000,
			77: 35.000000,
			78: 35.000000,
			79: 36.000000,
			80: 36.000000,
			81: 37.000000,
			82: 37.000000,
			83: 37.000000,
			84: 38.000000,
			85: 38.000000,
			86: 38.000000,
			87: 39.000000,
			88: 39.000000,
			89: 39.000000,
			90: 39.000000,
			91: 40.000000,
			92: 40.000000,
			93: 41.000000,
			94: 41.000000,
			95: 42.000000,
			96: 42.000000,
			97: 43.000000,
			98: 43.000000,
			99: 43.000000,
			100: 44.000000,
			101: 44.000000,
			102: 45.000000,
			103: 45.000000,
			104: 46.000000,
			105: 46.000000,
			106: 46.000000,
			107: 47.000000,
			108: 47.000000,
			109: 48.000000,
			110: 48.000000,
			111: 48.000000,
			112: 49.000000,
			113: 49.000000,
			114: 49.000000,
			115: 50.000000,
			116: 50.000000,
			117: 51.000000,
			118: 51.000000,
			119: 52.000000,
			120: 52.000000,
			121: 53.000000,
			122: 53.000000,
			123: 53.000000,
			124: 54.000000,
			125: 54.000000,
			126: 55.000000,
			127: 55.000000,
			128: 56.000000,
			129: 56.000000,
			130: 56.000000,
			131: 57.000000,
			132: 57.000000,
			133: 58.000000,
			134: 58.000000,
			135: 58.000000,
			136: 59.000000,
			137: 59.000000,
			138: 60.000000,
			139: 60.000000,
			140: 60.000000,
			141: 61.000000,
			142: 61.000000,
			143: 62.000000,
			144: 62.000000,
			145: 63.000000,
			146: 63.000000,
			147: 64.000000,
			148: 64.000000,
			149: 65.000000,
			150: 65.000000,
			151: 66.000000,
			152: 66.000000,
			153: 67.000000,
			154: 67.000000,
			155: 68.000000,
			156: 68.000000,
			157: 68.000000,
			158: 69.000000,
			159: 69.000000,
			160: 70.000000,
			161: 70.000000,
			162: 71.000000,
			163: 71.000000,
			164: 72.000000,
			165: 72.000000,
			166: 73.000000,
			167: 73.000000,
			168: 74.000000,
			169: 75.000000,
			170: 75.000000,
			171: 76.000000,
			172: 76.000000,
			173: 77.000000,
			174: 77.000000,
			175: 78.000000,
			176: 78.000000,
			177: 79.000000,
			178: 79.000000,
			179: 80.000000,
			180: 80.000000,
			181: 81.000000,
			182: 82.000000,
			183: 82.000000,
			184: 83.000000,
			185: 84.000000,
			186: 84.000000,
			187: 85.000000,
			188: 86.000000,
			189: 86.000000,
			190: 87.000000,
			191: 87.000000,
			192: 88.000000,
			193: 89.000000,
			194: 89.000000,
			195: 90.000000,
			196: 91.000000,
			197: 91.000000,
			198: 92.000000,
			199: 93.000000,
			200: 94.000000,
			201: 95.000000,
			202: 95.000000,
			203: 96.000000,
			204: 97.000000,
			205: 98.000000,
			206: 99.000000,
			207: 99.000000,
			208: 100.000000,
			209: 101.000000,
			210: 102.000000,
			211: 103.000000,
			212: 104.000000,
			213: 105.000000,
			214: 106.000000,
			215: 107.000000,
			216: 108.000000,
			217: 109.000000,
			218: 110.000000,
			219: 111.000000,
			220: 113.000000,
			221: 114.000000,
			222: 115.000000,
			223: 117.000000,
			224: 118.000000,
			225: 119.000000,
			226: 120.000000,
			227: 122.000000,
			228: 124.000000,
			229: 125.000000,
			230: 127.000000,
			231: 129.000000,
			232: 131.000000,
			233: 133.000000,
			234: 135.000000,
			235: 137.000000,
			236: 139.000000,
			237: 141.000000,
			238: 144.000000,
			239: 147.000000,
			240: 150.000000,
			241: 153.000000,
			242: 156.000000,
			243: 160.000000,
			244: 165.000000,
			245: 170.000000,
			246: 175.000000,
			247: 180.000000,
			248: 188.000000,
			249: 196.000000,
			250: 206.000000,
			251: 218.000000,
			252: 236.000000,
			253: 261.000000,
			254: 284.000000,
			255: 307.000000,
		}
		y := m[frame[63]]
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:pvy1_t", timestamp, z))
	}
	{
		m := map[byte]float64{
			0: -61.000000,
			1: -51.000000,
			2: -41.000000,
			3: -35.000000,
			4: -31.000000,
			5: -27.000000,
			6: -23.000000,
			7: -21.000000,
			8: -19.000000,
			9: -16.000000,
			10: -14.000000,
			11: -13.000000,
			12: -11.000000,
			13: -10.000000,
			14: -8.000000,
			15: -7.000000,
			16: -5.000000,
			17: -4.000000,
			18: -3.000000,
			19: -2.000000,
			20: -1.000000,
			21: 0.000000,
			22: 1.000000,
			23: 2.000000,
			24: 3.000000,
			25: 4.000000,
			26: 5.000000,
			27: 6.000000,
			28: 7.000000,
			29: 7.000000,
			30: 8.000000,
			31: 9.000000,
			32: 9.000000,
			33: 10.000000,
			34: 11.000000,
			35: 11.000000,
			36: 12.000000,
			37: 13.000000,
			38: 14.000000,
			39: 14.000000,
			40: 15.000000,
			41: 16.000000,
			42: 16.000000,
			43: 17.000000,
			44: 17.000000,
			45: 18.000000,
			46: 18.000000,
			47: 19.000000,
			48: 19.000000,
			49: 20.000000,
			50: 20.000000,
			51: 21.000000,
			52: 22.000000,
			53: 22.000000,
			54: 23.000000,
			55: 23.000000,
			56: 24.000000,
			57: 24.000000,
			58: 25.000000,
			59: 25.000000,
			60: 26.000000,
			61: 27.000000,
			62: 27.000000,
			63: 28.000000,
			64: 29.000000,
			65: 29.000000,
			66: 30.000000,
			67: 30.000000,
			68: 31.000000,
			69: 31.000000,
			70: 32.000000,
			71: 32.000000,
			72: 33.000000,
			73: 33.000000,
			74: 34.000000,
			75: 34.000000,
			76: 35.000000,
			77: 35.000000,
			78: 35.000000,
			79: 36.000000,
			80: 36.000000,
			81: 37.000000,
			82: 37.000000,
			83: 37.000000,
			84: 38.000000,
			85: 38.000000,
			86: 38.000000,
			87: 39.000000,
			88: 39.000000,
			89: 39.000000,
			90: 39.000000,
			91: 40.000000,
			92: 40.000000,
			93: 41.000000,
			94: 41.000000,
			95: 42.000000,
			96: 42.000000,
			97: 43.000000,
			98: 43.000000,
			99: 43.000000,
			100: 44.000000,
			101: 44.000000,
			102: 45.000000,
			103: 45.000000,
			104: 46.000000,
			105: 46.000000,
			106: 46.000000,
			107: 47.000000,
			108: 47.000000,
			109: 48.000000,
			110: 48.000000,
			111: 48.000000,
			112: 49.000000,
			113: 49.000000,
			114: 49.000000,
			115: 50.000000,
			116: 50.000000,
			117: 51.000000,
			118: 51.000000,
			119: 52.000000,
			120: 52.000000,
			121: 53.000000,
			122: 53.000000,
			123: 53.000000,
			124: 54.000000,
			125: 54.000000,
			126: 55.000000,
			127: 55.000000,
			128: 56.000000,
			129: 56.000000,
			130: 56.000000,
			131: 57.000000,
			132: 57.000000,
			133: 58.000000,
			134: 58.000000,
			135: 58.000000,
			136: 59.000000,
			137: 59.000000,
			138: 60.000000,
			139: 60.000000,
			140: 60.000000,
			141: 61.000000,
			142: 61.000000,
			143: 62.000000,
			144: 62.000000,
			145: 63.000000,
			146: 63.000000,
			147: 64.000000,
			148: 64.000000,
			149: 65.000000,
			150: 65.000000,
			151: 66.000000,
			152: 66.000000,
			153: 67.000000,
			154: 67.000000,
			155: 68.000000,
			156: 68.000000,
			157: 68.000000,
			158: 69.000000,
			159: 69.000000,
			160: 70.000000,
			161: 70.000000,
			162: 71.000000,
			163: 71.000000,
			164: 72.000000,
			165: 72.000000,
			166: 73.000000,
			167: 73.000000,
			168: 74.000000,
			169: 75.000000,
			170: 75.000000,
			171: 76.000000,
			172: 76.000000,
			173: 77.000000,
			174: 77.000000,
			175: 78.000000,
			176: 78.000000,
			177: 79.000000,
			178: 79.000000,
			179: 80.000000,
			180: 80.000000,
			181: 81.000000,
			182: 82.000000,
			183: 82.000000,
			184: 83.000000,
			185: 84.000000,
			186: 84.000000,
			187: 85.000000,
			188: 86.000000,
			189: 86.000000,
			190: 87.000000,
			191: 87.000000,
			192: 88.000000,
			193: 89.000000,
			194: 89.000000,
			195: 90.000000,
			196: 91.000000,
			197: 91.000000,
			198: 92.000000,
			199: 93.000000,
			200: 94.000000,
			201: 95.000000,
			202: 95.000000,
			203: 96.000000,
			204: 97.000000,
			205: 98.000000,
			206: 99.000000,
			207: 99.000000,
			208: 100.000000,
			209: 101.000000,
			210: 102.000000,
			211: 103.000000,
			212: 104.000000,
			213: 105.000000,
			214: 106.000000,
			215: 107.000000,
			216: 108.000000,
			217: 109.000000,
			218: 110.000000,
			219: 111.000000,
			220: 113.000000,
			221: 114.000000,
			222: 115.000000,
			223: 117.000000,
			224: 118.000000,
			225: 119.000000,
			226: 120.000000,
			227: 122.000000,
			228: 124.000000,
			229: 125.000000,
			230: 127.000000,
			231: 129.000000,
			232: 131.000000,
			233: 133.000000,
			234: 135.000000,
			235: 137.000000,
			236: 139.000000,
			237: 141.000000,
			238: 144.000000,
			239: 147.000000,
			240: 150.000000,
			241: 153.000000,
			242: 156.000000,
			243: 160.000000,
			244: 165.000000,
			245: 170.000000,
			246: 175.000000,
			247: 180.000000,
			248: 188.000000,
			249: 196.000000,
			250: 206.000000,
			251: 218.000000,
			252: 236.000000,
			253: 261.000000,
			254: 284.000000,
			255: 307.000000,
		}
		y := m[frame[64]]
		z := 1.000000 * y + 273.150000
		data = append(data, NewDoubleDatum("d:csswe:pvy2_t", timestamp, z))
	}
	{
		raw := (frame[25] >> 0) & 1 == 1
		data = append(data, NewBoolDatum("d:csswe:satellite_mode", timestamp, raw))
	}
	{
		raw := uint16(frame[26]) << 0 | uint16(frame[27]) << 8
		data = append(data, NewInt64Datum("d:csswe:cmds_since_boot", timestamp, int64(raw)))
	}
	{
		raw := uint32(frame[34]) << 0 | uint32(frame[35]) << 8 | uint32(frame[36]) << 16 | uint32(frame[37]) << 24
		X := float64(raw)
		y := X*0.00006944444
		z := 86400.000000 * y + 0.000000
		data = append(data, NewDoubleDatum("d:csswe:time_since_boot_s", timestamp, z))
	}
	{
		raw := (frame[223] >> 4) & 1 == 1
		data = append(data, NewBoolDatum("d:csswe:gpio_reptile_3p3v", timestamp, raw))
	}
	{
		raw := (frame[223] >> 7) & 1 == 1
		data = append(data, NewBoolDatum("d:csswe:gpio_reptile_5p0v", timestamp, raw))
	}
	{
		raw := (frame[223] >> 0) & 1 == 1
		data = append(data, NewBoolDatum("d:csswe:gpio_battery_heater", timestamp, raw))
	}
	{
		raw := (frame[223] >> 1) & 1 == 1
		data = append(data, NewBoolDatum("d:csswe:gpio_adm_resistor", timestamp, raw))
	}
	return data, nil
}
